概念题1: 什么是闭包?
	参考答案: 
		在函数嵌套定义（即在函数内部再定义函数）的前提下，内部函数使用了外部函数的变量，并且外部函数返回了内部函数的名字（即引用），我们把这个**使用外部函数变量的内部函数称为闭包**

		闭包三要素：

		1. 在函数嵌套(函数里面再定义函数)的前提下
		2. 内部函数使用了外部函数的变量(还包括外部函数的参数)
		3. 外部函数返回了内部函数

概念题2: 什么是装饰器? 装饰器有什么特点?
	参考答案: 
		在函数正上方使用 "@装饰器名" 的形式给已有函数增加额外功能的函数，它本质上就是一个闭包函数。

		装饰器的功能特点:

		1. 不修改已有函数的源代码
		2. 不修改已有函数的调用方式
		3. 给已有函数增加额外的功能
		

概念题3: 如何理解将函数作为参数传递?
	参考答案：
	
		和变量名一样，在Python中，函数的名字也是引用，函数名是可以像变量名一样作为参数传递的
		

综合练习题1: 使用装饰器实现对已有函数执行时间的统计

参考代码:

import time

def get_time(func):
    def inner():
        begin = time.time()
        func()
        end = time.time()
        print("函数执行花费%f" % (end-begin))
    return inner


@get_time
def func1():
    for i in range(100000):
        print(i)


func1()

综合练习题2: 一个函数, 返回一个字符串, 使用装饰器实现对这个字符串添加后缀.txt

参考代码:

def decorator(func):
    def inner(*args, **kwargs):
        return func() + ".txt"
    return inner



@decorator
def content():
    return "helloworld"

result = content()

print(result)
